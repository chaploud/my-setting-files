 # ctrl+wを/まで削除の挙動に
 WORDCHARS=${WORDCHARS//\//}

 # ls
 alias ls='ls -GF'
 alias ll='ls -lGF'
 alias sl="ls"
 alias s="ls"
 alias l="ls"

 # chpwd() {
 #	 ls -a
 # }

 # grep
 alias grep='grep --color=auto'

 # Git
 alias log="git log --decorate --format=format:'%C(bold cyan)%as%C(reset) %C(bold blue)%h%C(reset) %C(white bold)%<(14,trunc)%an%C(reset) %C(green)%<(38,trunc)%s%C(reset) '"
 alias gs="git status"
 alias ga="git add"
 alias gc="git commit"
 alias gp="git push"
 alias gl=log
 alias gd="git diff"
 alias gf='git pull origin $(git branch --show-current)'
 alias gff='git pull'
 alias gz='git stash -u'
 alias gzp='git stash pop'

 # grmb: git remove branch
 git_rmb() {
	 local current_branch=$(git branch --show-current)
	 local branches=$(git branch | grep -v "^\*" | sed 's/^[ \t]*//')
	 local selected_branch=$(echo "$branches" | fzf \
		 --prompt="Select branch to remove: " \
		 --preview="git log --oneline --graph --color=always {}" \
		 --header="Current branch: $current_branch")

	 if [ -n "$selected_branch" ]; then
		 git branch -d "$selected_branch"
		 echo "Removed branch: $selected_branch"
	 fi
 }
 alias grmb='git_rmb'

 # === Starship
 eval "$(starship init zsh)"

 # teachme_web_duvelのteachme_webコンテナ起動がうまく行かないときのためのDBリセット
 alias tmbresetdb='docker compose exec teachme_web bundle exec rails db:reset_with_initial_data'
 alias tmbup='gf && docker compose down && docker compose up'

 # teachme_eboshigara
 alias myskillup='gf && docker compose down && docker compose up'

 # emacsclient
 e() {
	 if emacsclient --eval "t" > /dev/null 2>&1; then
		 emacsclient -n "$@"
	 else
		 emacs "$@" &
	 fi
 }

 # === 補完候補の読み込み
 autoload -Uz compinit
 # キャッシュ戦略
 local now=$(date +%s)
 local threshold=$((60 * 60 * 24)) # 1日

 if [ -f ~/.zcompdump ]; then
	 local updated=$(date -r ~/.zcompdump +%s)
	 if [ $((${now} - ${updated})) -gt ${threshold} ]; then
		 compinit
	 else
		 compinit -C
	 fi
 else
	 compinit
 fi

# === emacs: eatシェルのための設定
[ -n "$EAT_SHELL_INTEGRATION_DIR" ] && source "$EAT_SHELL_INTEGRATION_DIR/zsh"

export PATH="$HOME/.claude/local:$PATH"

# infra
eval "$(direnv hook zsh)"

# Terraform
alias tf='terraform'

# Ruby
eval "$(rbenv init - zsh)"

# for Ruby (MySQL)
PATH="/opt/homebrew/opt/mysql-client@8.4/bin/:$PATH"
PKG_CONFIG_PATH="/opt/homebrew/opt/mysql-client@8.4/lib/pkgconfig:$PKG_CONFIG_PATH"

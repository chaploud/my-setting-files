# ctrl+wを/まで削除の挙動に
WORDCHARS=${WORDCHARS//\//}

# ls
alias ls='ls -GF'
alias ll='ls -lGF'
alias sl="ls"
alias s="ls"
alias l="ls"

chpwd() {
  ls
}

alias grep='grep --color=auto'

# Git
alias log="git log --decorate --format=format:'%C(bold cyan)%as%C(reset) %C(bold blue)%h%C(reset) %C(white bold)%<(14,trunc)%an%C(reset) %C(green)%<(38,trunc)%s%C(reset) '"
alias gs="git status"
alias ga="git add"
alias gc="git commit"
alias gp="git push"
alias gl=log
alias gd="git diff"
alias gf='git pull origin $(git branch --show-current)'
alias gff='git pull'
alias gz='git stash -u'
alias gzp='git stash pop'

# grmb: git remove branch
git_rmb() {
  local current_branch=$(git branch --show-current)
  local branches=$(git branch | grep -v "^\*" | sed 's/^[ \t]*//')
  local selected_branch=$(echo "$branches" | fzf \
    --prompt="Select branch to remove: " \
    --preview="git log --oneline --graph --color=always {}" \
    --header="Current branch: $current_branch")

  if [ -n "$selected_branch" ]; then
    git branch -d "$selected_branch"
    echo "Removed branch: $selected_branch"
  fi
}
alias grmb='git_rmb'

# === Starship
eval "$(starship init zsh)"

# === local bin
export PATH="$PATH:$HOME/.local/bin"

# === zsh-completions
# === zsh-autosuggestions
# if type brew &>/dev/null; then
#   FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
#   source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
# fi

# === Open JDK
# JDK (Eclipse Adoptium/temurin-21.jdk)
export JAVA_HOME=$(/usr/libexec/java_home -v 21)
export PATH="$JAVA_HOME/bin:$PATH"

# === pyenv
# 2025-07-04: python 3.13.5
# export PYENV_ROOT="$HOME/.pyenv"
# [[ -d "$PYENV_ROOT/bin" ]] && export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init - zsh)"

# === rbenv
# 2025-07-04: ruby 3.3.8
# FPATH="$HOME/.rbenv/completions:$FPATH"
# export RBENV_ROOT="$HOME/.rbenv"
# [[ -d "$RBENV_ROOT/bin" ]] && export PATH="$RBENV_ROOT/bin:$PATH"
# eval "$(rbenv init -)"

# === Zig
# 2025-07-04: 0.14.1
# ~/.local/share/zig/shell-completionsに補完用リポジトリをclone
# FPATH="$HOME/.local/share/zig/shell-completions:$FPATH"

# === 補完候補の読み込み(最後に1回実行でOK)
autoload -U compinit && compinit

# 1password ssh-agent
export SSH_AUTH_SOCK="$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"
export PATH="/opt/homebrew/opt/postgresql@17/bin:$PATH"

# teachme_web_duvelのteachme_webコンテナ起動がうまく行かないときのためのDBリセット
alias tmbresetdb='docker compose exec teachme_web bundle exec rails db:reset_with_initial_data'
alias tmbup='gf && docker compose down && docker compose up'

# teachme_eboshigara
alias myskillup='gf && docker compose down && docker compose up'

# emacsclient
e() {
  if emacsclient --eval "t" > /dev/null 2>&1; then
    emacsclient --no-wait "$@"
  else
    emacs "$@" &
  fi
}

export LANG=en_US.UTF-8
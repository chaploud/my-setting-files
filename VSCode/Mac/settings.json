{
  // ===== エディタ基本設定 =====
  // プラットフォームごとにキーバインドを分ける
  "settingsSync.keybindingsPerPlatform": true,
  // 信頼されたワークスペースを開いているならば、信頼されていないファイルを開くときに警告を出さない
  "security.workspace.trust.untrustedFiles": "open",
  // フォント
  "editor.fontFamily": "'Source Han Code JP', 'Cica', 'UDEV Gothic 35NFLG', 'Droid Sans Mono', 'monospace', monospace",
  "editor.fontSize": 14,
  "terminal.integrated.fontSize": 14,
  "debug.console.fontSize": 14,
  // 行番号
  "editor.lineNumbers": "on",
  // カーソルがいい感じに点滅する
  "editor.cursorBlinking": "phase",
  // スクロールがなめらかになる
  "editor.smoothScrolling": true,
  // カーソルの移動がアニメーション風になる
  "editor.cursorSmoothCaretAnimation": "on",
  // 貼り付け時にフォーマット指定があれば適用する
  "editor.formatOnPaste": true,
  // 保存時にフォーマット指定があれば適用する
  "editor.formatOnSave": true,
  // ミニマップは領域を圧迫するので消す
  "editor.minimap.enabled": false,
  // スペースを可視化する
  "editor.renderWhitespace": "boundary",
  // 選択した語と一致する他の箇所のハイライトは不要
  "editor.selectionHighlight": false,
  // カーソル下の語と一致する他の箇所のハイライトは不要
  "editor.occurrencesHighlight": "off",
  "editor.tokenColorCustomizations": {
    // コメントの色が薄すぎるので主張しすぎず見えやすい色にする
    "comments": "#5fafa2",
    // コメントが斜体であるのを標準にする
    "textMateRules": [
      {
        "scope": [
          "comment",
          "comment.block",
          "comment.block.documentation",
          "comment.line",
          "comment.line.double-slash",
          "punctuation.definition.comment"
        ],
        "settings": {
          "fontStyle": ""
        }
      },
      {
        "scope": [
          "constant.language.nil.clojure",
          "constant.language.boolean.clojure",
          "constant.numeric"
        ],
        "settings": {
          "foreground": "#7DCFFF",
        }
      },
      {
        "scope": [
          "constant.keyword.clojure",
        ],
        "settings": {
          "foreground": "#bb9af7",
        }
      }
    ]
  },
  // NeoVimとの相性(日本語入力で上書されてしまう)への対処
  // "editor.editContext": true,
  // タブサイズの設定
  "editor.tabSize": 2,
  // 言語別
  "[python]": {
    "editor.tabSize": 4
  },
  "[c]": {
    "editor.tabSize": 4
  },
  "[cpp]": {
    "editor.tabSize": 4
  },
  "[zig]": {
    "editor.tabSize": 4
  },
  "[rust]": {
    "editor.tabSize": 4
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  // 初回のスタートアップ画面は表示しない
  "workbench.startupEditor": "none",
  // 空のフォルダを省略して一列にしてしまわない(必ずツリー表示にする)
  "explorer.compactFolders": false,
  // ファイル貼り付け時に確認ダイアログを出さない
  "explorer.confirmPasteNative": false,
  // ドラッグアンドドロップに確認ダイアログを出さない
  "explorer.confirmDragAndDrop": false,
  // 保存時に行末の空白など不要な空白を削除する
  "files.trimTrailingWhitespace": true,
  // Emacsキーバインドをターミナルでも有効に使いたい
  "terminal.integrated.allowChords": false,
  // ターミナルのスクロールバックをたくさんできるようにする
  "terminal.integrated.scrollback": 10000,
  // VSCodeを終了した後、前回のプロセスを復元しない
  "terminal.integrated.persistentSessionReviveProcess": "never",
  // ターミナルでカーソルを点滅させる
  "terminal.integrated.cursorBlinking": true,
  // デバッグ開始時に自動でデバッグコンソールを開かない
  "debug.internalConsoleOptions": "neverOpen",
  // Zen Mode
  "zenMode.fullScreen": false,
  "zenMode.showTabs": "none",
  "zenMode.centerLayout": false,
  // なるべくコンパクトに
  "window.commandCenter": false,
  // Git関連の設定
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.openRepositoryInParentFolders": "never",
  "github.gitProtocol": "ssh",
  // 変更点の強調
  "scm.diffDecorationsGutterPattern": {
    "added": false,
    "modified": false
  },
  // 文字検索時に大文字小文字を都合よく検索する
  "search.smartCase": true,
  "search.useGlobalIgnoreFiles": true,
  "search.useParentIgnoreFiles": true,
  // メリハリをつけるため下部パネルとサイドバーの色を調整
  "workbench.colorCustomizations": {
    "[Tokyo Night Gogh]": {
      "editor.selectionBackground": "#303f6b",
      "editor.inactiveSelectionBackground": "#303f6bbb",
      "list.activeSelectionBackground": "#303f6b",
      "list.inactiveSelectionBackground": "#303f6bbb",
      "terminal.selectionBackground": "#303f6b",
      "terminal.inactiveSelectionBackground": "#303f6bbb",
      "diffEditor.insertedLineBackground": "#2ea04344",
      "diffEditor.insertedTextBackground": "#2ea04366",
      "diffEditor.removedLineBackground": "#ff5a6a44",
      "diffEditor.removedTextBackground": "#ff5a6a66"
    }
  },
  "editor.semanticTokenColorCustomizations": {
    "enabled": true,
    "rules": {
      "macro": {
        "foreground": "#F7768E"
      },
      "variable": {
        "foreground": "#E08F68"
      },
    }
  },
  // === vscode-icons
  "workbench.iconTheme": "vscode-icons",
  // === Remote SSH
  "remote.SSH.enableAgentForwarding": true,
  "remote.autoForwardPorts": false,
  // === Remote Containers
  // コンテナ接続時に自分の設定をなるべく再現する
  "dotfiles.repository": "https://github.com/chaploud/my-setting-files.git",
  "dotfiles.targetPath": "~/dotfiles",
  "dotfiles.installCommand": "dev_container/install.sh",
  // 拡張機能は以下が追加でインストールされる
  "dev.containers.defaultExtensions": [
    "adpyke.codesnap",
    "Amin.omodoro",
    "Anthropic.claude-code",
    "betterthantomorrow.calva",
    "betterthantomorrow.calva-backseat-driver",
    "christian-kohler.npm-intellisense",
    "christian-kohler.path-intellisense",
    "dbcode.dbcode",
    "fill-labs.dependi",
    "figma.figma-vscode-extension",
    "GitHub.copilot-chat",
    "GitHub.vscode-pull-request-github",
    "github.vscode-github-actions",
    "Gruntfuggly.todo-tree",
    "humao.rest-client",
    "lixquid.calculator",
    "mechatroner.rainbow-csv",
    "ms-azuretools.vscode-containers",
    "shardulm94.trailing-spaces",
    "shd101wyy.markdown-preview-enhanced",
    "TakumiI.markdowntable",
    "timonwong.shellcheck",
    "wtetsu.tempfile",
    "yandeu.five-server",
    "yzhang.markdown-all-in-one"
  ],
  // === GitHub Copilot
  // デフォルトでオフになっている言語も補完を効かせるようにする
  "github.copilot.enable": {
    "*": true,
    "plaintext": true,
    "markdown": true,
    "scminput": true,
    "sql": true
  },
  // 次の変更点を提案はオフ
  "github.copilot.nextEditSuggestions.enabled": false,
  // === GitHub Copilot Chat
  // 日本語で応答してもらう
  "github.copilot.chat.localeOverride": "ja",
  // OSSなどでコミットメッセージを英語で生成するのに便利
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Use a maximum of 80 characters."
    },
    {
      "text": "Messages should be in English."
    }
  ],
  "chat.mcp.serverSampling": {
    "GistPad: GistPad": {
      "allowedModels": [
        "github.copilot-chat/gpt-4.1"
      ]
    }
  },
  // Continueをポチポチしなくて済む自動承認
  "chat.tools.autoApprove": true,
  "chat.mcp.discovery.enabled": true,
  "chat.agent.enabled": true,
  // === Todo Tree
  "todo-tree.tree.showCountsInTree": true,
  "todo-tree.tree.expanded": true,
  "todo-tree.tree.scanMode": "workspace only",
  "todo-tree.highlights.highlightDelay": 100,
  "todo-tree.general.tags": [
    "TODO",
    "NOTE",
    "FIXME",
    "XXX"
  ],
  "todo-tree.highlights.useColourScheme": true,
  "todo-tree.highlights.backgroundColourScheme": [
    "E6D8A8",
    "B3C7E6",
    "D6A8C7",
    "E6B3B3"
  ],
  "todo-tree.highlights.foregroundColourScheme": [
    "black",
    "black",
    "black",
    "black"
  ],
  // === VSCode NeoVim
  // 公式の推奨設定
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  // `f` `d` を連続で押した時、escape扱いになる
  "vscode-neovim.compositeKeys": {
    "fd": {
      "command": "vscode-neovim.escape"
    }
  },
  // insertモード時にctrl+<key>をNeoVim側に送信したいものだけを指定
  "vscode-neovim.ctrlKeysForInsertMode": [
    "a", // 行頭に移動
    "b", // 1文字戻る
    "d", // delete
    "e", // 行末に移動
    "f", // 1文字進む
    "g", // ESC
    "p", // カーソルを上に移動
    "h", // backspace
    "k", // カーソルから行末まで削除
    "l", // Recenter Top Bottom
    // "m", // enterとして認識させる
    "n", // カーソルを下に移動
    "w", // 1単語削除
    "y" // 貼り付け
  ],
  // normalモード時にctrl+<key>をNeoVim側に送信したいものだけを指定
  "vscode-neovim.ctrlKeysForNormalMode": [
    "a", // 数字を1増やす
    "d", // 画面半分下にスクロール
    "e", // カーソルを移動せず画面を下にスクロール
    "g", // ESC
    "h", // backspace
    "l", // Recenter Top Bottom
    "m", // enter
    "n", // yanky後のctrl+n
    // "o", // 前の場所に戻る(keybindings.jsonで設定)
    "p", // yanky後のctrl+p
    "r", // Redo
    // "t", // 元の場所に戻る(keybindings.jsonで設定)
    "u", // 画面半分上にスクロール
    "v", // 矩形選択
    "w", // ウィンドウ操作
    "x", // decrement
    "y", // カーソルを移動せず画面を上にスクロール
    "/", // コメントアウト
    "]" // 定義ジャンプ
  ],
  // === Calva
  // サイドバーにおけるREPLのインスペクタの階層的な括弧の色付けを有効にする
  "calva.enableInspectorRainbow": true,
  // REPLの出力ファイルは${projectRootPath}/.calva/repl.calva-replを使う
  "calva.useLegacyReplWindowPath": false,
  // デフォルトでは、入力や出力やエラーがそれぞれ別の場所に出力される
  // すべてREPLウィンドウにまとめて表示されてほしい場合は以下を設定
  "calva.outputDestinations": {
    "evalResults": "repl-window", // 評価結果をREPLウィンドウに出力
    "evalOutput": "output-view", // 標準出力/エラーをREPLウィンドウに出力
    "otherOutput": "output-view" // CalvaのメッセージなどをREPLウィンドウに出力
  },
  // インデントガイドのレインボー化
  "calva.highlight.rainbowIndentGuides": true,
  // CalvaでのPareditによる削除操作時、削除したものをクリップボードにコピーする
  "calva.paredit.killAlsoCutsToClipboard": true,
  // 標準出力やエラー出力がコメント(;)でプレフィックスされるのをやめる
  "calva.legacyPrintBareReplWindowOutput": true,
  // CalvaのREPL接続時に自動でサイドパネルのインスペクタにフォーカスが当たるのをやめる
  "calva.autoOpenInspector": false,
  // "calva.evaluationSendCodeToOutputWindow": true,
  "calva.autoOpenResultOutputDestination": true,
  "calva.referencesCodeLens.enabled": true,
  "clojure.trace.server": "messages",
  // Calva Backseat Driver
  "calva-backseat-driver.enableMcpReplEvaluation": true,
  // === Code Runner
  "code-runner.runInTerminal": true,
  "code-runner.saveFileBeforeRun": true,
  "code-runner.clearPreviousOutput": true,
  "code-runner.showExecutionMessage": false,
  "code-runner.showRunCommandInEditorContextMenu": false,
  "code-runner.showRunCommandInExplorerContextMenu": false,
  "code-runner.executorMap": {
    "javascript": "bun",
    "typescript": "bun"
  },
  // === Rust Analyzer
  "rust-analyzer.inlayHints.parameterHints.enable": false,
  "rust-analyzer.inlayHints.typeHints.enable": false,
  "rust-analyzer.inlayHints.chainingHints.enable": false,
  // === Python
  "python.analysis.typeCheckingMode": "strict",
  // === Zig
  "zig.zls.enabled": "on",
  "zig.zls.inlayHintsHideRedundantParamNames": true,
  "zig.zls.inlayHintsHideRedundantParamNamesLastToken": true,
  "zig.zls.inlayHintsShowVariableTypeHints": false,
  "zig.zls.inlayHintsShowParameterName": false,
  "zig.zls.inlayHintsShowStructLiteralFieldType": false,
  // === Code LLDB
  "lldb.suppressUpdateNotifications": true,
  // === Pomodoro Timer
  "pomodoro.breakTime": 10,
  "pomodoro.soundIntervalNotification": 1,
  "pomodoro.workColorButton": "orange",
  "pomodoro.workColorTime": "orange",
  "pomodoro.workTime": 45,
  // === Path Intellisense
  "path-intellisense.absolutePathToWorkspace": false,
  "path-intellisense.autoSlashAfterDirectory": true,
  "path-intellisense.autoTriggerNextSuggestion": true,
  // === Project Manager
  "projectManager.sortList": "Saved",
  "dbcode.resultLocation": "panel",
  "dbcode.ai.mcp.autoStart": false,
  "dbcode.history.enabled": true,
  "dbcode.connections": [
    {
      "connectionId": "iw95kZ6WPAIJ4fk_H4kxf",
      "name": "eboshigara_container",
      "driver": "postgres",
      "color": "#7655FF",
      "connectionType": "host",
      "host": "database",
      "port": 5432,
      "ssl": false,
      "username": "root",
      "password": "",
      "savePassword": "secretStorage",
      "readOnly": false,
      "connectionTimeout": 30
    },
    {
      "connectionId": "MixRJYcvec7qLM7XM8NXz",
      "name": "eboshigara_host",
      "driver": "postgres",
      "color": "#F00019",
      "connectionType": "host",
      "host": "localhost",
      "port": 54320,
      "ssl": false,
      "username": "root",
      "password": "",
      "savePassword": "secretStorage",
      "readOnly": false,
      "connectionTimeout": 30
    },
    {
      "connectionId": "MNRwzfdJbVHbY1dXl_lvB",
      "name": "web_duvel_host",
      "driver": "mysql",
      "color": "#F00019",
      "connectionType": "host",
      "host": "localhost",
      "port": 3333,
      "ssl": false,
      "username": "root",
      "password": "",
      "savePassword": "secretStorage",
      "readOnly": false,
      "connectionTimeout": 30,
      "driverOptions": {
        "retrievePublickey": true
      },
      "filters": {}
    }
  ],
  "dart.flutterSdkPath": "/Users/shota.508/flutter",
  "githubPullRequests.pullBranch": "never",
  "diffEditor.renderSideBySideInlineBreakpoint": 1600,
  "workbench.colorTheme": "Tokyo Night Gogh",
  "workbench.editor.empty.hint": "hidden",
}